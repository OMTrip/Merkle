const swapContractAddress = '0xC85504cFD7849387f5C480FBc9ad98d7A8849Db2';
const swapAbi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: '_pairHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'baseToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'pairToken',
        type: 'address',
      },
      {indexed: false, internalType: 'address', name: 'user', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AddLiqudity',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: '_pairHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'baseToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'pairToken',
        type: 'address',
      },
      {indexed: false, internalType: 'address', name: 'user', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'pairAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'buyQnt',
        type: 'uint256',
      },
      {indexed: false, internalType: 'uint256', name: 'price', type: 'uint256'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'priceImpact',
        type: 'uint256',
      },
      {indexed: false, internalType: 'uint256', name: 'fee', type: 'uint256'},
    ],
    name: 'Buy',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: '_pairHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'baseToken',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'pairToken',
        type: 'address',
      },
      {indexed: false, internalType: 'address', name: 'owner', type: 'address'},
      {indexed: false, internalType: 'uint256', name: 'price', type: 'uint256'},
      {
        indexed: false,
        internalType: 'bool',
        name: 'communitySellEnable',
        type: 'bool',
      },
    ],
    name: 'QuickPair',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: '_pairHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'baseToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'pairToken',
        type: 'address',
      },
      {indexed: false, internalType: 'address', name: 'user', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'removedAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardAmount',
        type: 'uint256',
      },
    ],
    name: 'RemoveLiqudity',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: '_pairHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'baseToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'pairToken',
        type: 'address',
      },
      {indexed: false, internalType: 'address', name: 'user', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'pairAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'buyQnt',
        type: 'uint256',
      },
      {indexed: false, internalType: 'uint256', name: 'price', type: 'uint256'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'priceImpact',
        type: 'uint256',
      },
      {indexed: false, internalType: 'uint256', name: 'fee', type: 'uint256'},
    ],
    name: 'Sell',
    type: 'event',
  },
  {
    inputs: [],
    name: 'WETH',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    name: '_buyEnable',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    name: '_lock',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '', type: 'address'}],
    name: '_qouteEnable',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    name: '_sellEnable',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '_token', type: 'address'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'addLiqudity',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_token', type: 'address'}],
    name: 'addQouteToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: '_pairHash', type: 'bytes32'}],
    name: 'buyEnable',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'buyTokensForETH',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'buyTokensForTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_pairHash', type: 'bytes32'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'calculateBuy',
    outputs: [
      {internalType: 'uint256', name: '', type: 'uint256'},
      {internalType: 'uint256', name: '', type: 'uint256'},
      {internalType: 'uint256', name: '', type: 'uint256'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: '_amount', type: 'uint256'}],
    name: 'calculateFee',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_pairHash', type: 'bytes32'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'calculateSell',
    outputs: [
      {internalType: 'uint256', name: '', type: 'uint256'},
      {internalType: 'uint256', name: '', type: 'uint256'},
      {internalType: 'uint256', name: '', type: 'uint256'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_feeTo', type: 'address'}],
    name: 'changeFeeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_newRouter', type: 'address'}],
    name: 'changePancakeRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: '_newSlippage', type: 'uint256'}],
    name: 'changeSlippage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_token', type: 'address'}],
    name: 'checkAnyPairExist',
    outputs: [{internalType: 'bytes32', name: '_pairHash', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '_token', type: 'address'},
      {internalType: 'address', name: '_pairtoken', type: 'address'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
      {internalType: 'uint256', name: '_price', type: 'uint256'},
      {internalType: 'bool', name: '_communitySellEnable', type: 'bool'},
    ],
    name: 'createPair',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeTo',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'user', type: 'address'}],
    name: 'getAllliquidityByUser',
    outputs: [{internalType: 'bytes32[]', name: '', type: 'bytes32[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOut', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
    ],
    name: 'getAmountsIn',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
    ],
    name: 'getAmountsOut',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFees',
    outputs: [
      {internalType: 'uint256', name: 'fee_numerator_', type: 'uint256'},
      {internalType: 'uint256', name: 'fee_denominator_', type: 'uint256'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_hash', type: 'bytes32'},
      {internalType: 'address', name: 'user', type: 'address'},
    ],
    name: 'getLiqudityByUser',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address[]', name: 'path', type: 'address[]'}],
    name: 'getLiqudityFromRouter',
    outputs: [
      {internalType: 'uint112', name: 'reserve0', type: 'uint112'},
      {internalType: 'uint112', name: 'reserve1', type: 'uint112'},
      {internalType: 'uint32', name: 'blockTimestampLast', type: 'uint32'},
      {internalType: 'address', name: 'token0', type: 'address'},
      {internalType: 'address', name: 'token1', type: 'address'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '_basetoken', type: 'address'},
      {internalType: 'address', name: 'pairToken', type: 'address'},
    ],
    name: 'getPairHash',
    outputs: [{internalType: 'bytes32', name: '_pairHash', type: 'bytes32'}],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_hash', type: 'bytes32'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'getPriceImpact',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: '_hash', type: 'bytes32'}],
    name: 'getQuikPair',
    outputs: [
      {internalType: 'address', name: 'baseToken', type: 'address'},
      {internalType: 'address', name: 'pairToken', type: 'address'},
      {internalType: 'uint256', name: 'totalLPSupply', type: 'uint256'},
      {internalType: 'bool', name: 'communitySell', type: 'bool'},
      {internalType: 'uint256', name: 'price', type: 'uint256'},
      {internalType: 'uint256', name: 'baseBalance', type: 'uint256'},
      {internalType: 'uint256', name: 'pairBalance', type: 'uint256'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_hash', type: 'bytes32'},
      {internalType: 'address', name: 'user', type: 'address'},
    ],
    name: 'getRewardByUser',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_hash', type: 'bytes32'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'getSellPercent',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_pairHash', type: 'bytes32'},
      {internalType: 'address', name: '_user', type: 'address'},
    ],
    name: 'getUserBuyAmt',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '_feeTo', type: 'address'},
      {internalType: 'address', name: '_newowner', type: 'address'},
      {internalType: 'address[]', name: '_qouteTokens', type: 'address[]'},
      {internalType: 'address', name: '_pancakeRouter', type: 'address'},
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_token', type: 'address'}],
    name: 'isQoutTokenExist',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUserId',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '', type: 'bytes32'},
      {internalType: 'address', name: '', type: 'address'},
    ],
    name: 'liquidityAdded',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '', type: 'address'},
      {internalType: 'uint256', name: '', type: 'uint256'},
    ],
    name: 'liquidityByUser',
    outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '', type: 'address'},
      {internalType: 'address', name: '', type: 'address'},
    ],
    name: 'pairHash',
    outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pancakeRouter',
    outputs: [
      {internalType: 'contract IUniswapV2Router02', name: '', type: 'address'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    name: 'qouteTokens',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    name: 'quickpair',
    outputs: [
      {internalType: 'address', name: 'baseToken', type: 'address'},
      {internalType: 'address', name: 'pairToken', type: 'address'},
      {internalType: 'uint256', name: 'totalLPSupply', type: 'uint256'},
      {internalType: 'bool', name: 'communitySell', type: 'bool'},
      {internalType: 'uint256', name: 'percentSell', type: 'uint256'},
      {internalType: 'uint256', name: 'percentSell2', type: 'uint256'},
      {internalType: 'uint256', name: 'price', type: 'uint256'},
      {internalType: 'uint256', name: 'baseBalance', type: 'uint256'},
      {internalType: 'uint256', name: 'pairBalance', type: 'uint256'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_pairHash', type: 'bytes32'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'removeLiqudity',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: '_pairHash', type: 'bytes32'}],
    name: 'sellEnable',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'sellTokensForETH',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'uint256', name: '_amount', type: 'uint256'},
    ],
    name: 'sellTokensForTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: '_fee_numerator', type: 'uint256'},
      {internalType: 'uint256', name: '_fee_denominator', type: 'uint256'},
    ],
    name: 'setFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_pairHash', type: 'bytes32'},
      {internalType: 'bool', name: '_status', type: 'bool'},
    ],
    name: 'setPairBuyStatus',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: '_pairHash', type: 'bytes32'},
      {internalType: 'bool', name: '_status', type: 'bool'},
    ],
    name: 'setPairSellStatus',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '_token', type: 'address'},
      {internalType: 'bool', name: '_status', type: 'bool'},
    ],
    name: 'setStatusQouteEnable',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippage',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactETHForTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForETH',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amountIn', type: 'uint256'},
      {internalType: 'uint256', name: 'amountOutMin', type: 'uint256'},
      {internalType: 'address[]', name: 'path', type: 'address[]'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
    ],
    name: 'swapExactTokensForTokens',
    outputs: [{internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'newOwner', type: 'address'}],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {stateMutability: 'payable', type: 'receive'},
];

const MULTICALL_ADDRESS = '0xae11C5B5f29A6a25e955F0CB8ddCc416f522AF5C';
const MULTICALL_ABI = [
  {
    inputs: [
      {
        components: [
          {internalType: 'address', name: 'target', type: 'address'},
          {internalType: 'bytes', name: 'callData', type: 'bytes'},
        ],
        internalType: 'struct Multicall.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'aggregate',
    outputs: [
      {internalType: 'uint256', name: 'blockNumber', type: 'uint256'},
      {internalType: 'bytes[]', name: 'returnData', type: 'bytes[]'},
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'blockNumber', type: 'uint256'}],
    name: 'getBlockHash',
    outputs: [{internalType: 'bytes32', name: 'blockHash', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockCoinbase',
    outputs: [{internalType: 'address', name: 'coinbase', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockDifficulty',
    outputs: [{internalType: 'uint256', name: 'difficulty', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockGasLimit',
    outputs: [{internalType: 'uint256', name: 'gaslimit', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockTimestamp',
    outputs: [{internalType: 'uint256', name: 'timestamp', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'addr', type: 'address'}],
    name: 'getEthBalance',
    outputs: [{internalType: 'uint256', name: 'balance', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastBlockHash',
    outputs: [{internalType: 'bytes32', name: 'blockHash', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
];

const multisender_bsctestnet = '0x4fd362e03257825f31D2DBa70294D11a3C99a509';
const multisender_bsc = '0x5d00661ea3c9b8f095520573b9b940b6febcfd8b';
const multisenderabi = [
  {
    anonymous: false,
    inputs: [
      {indexed: false, internalType: 'address', name: 'token', type: 'address'},
      {indexed: false, internalType: 'uint256', name: 'total', type: 'uint256'},
    ],
    name: 'Multisent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {internalType: 'address[]', name: 'targets', type: 'address[]'},
      {internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'},
    ],
    name: 'multisendEther',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'bool', name: 'ensureExactAmount', type: 'bool'},
      {internalType: 'address[]', name: 'targets', type: 'address[]'},
      {internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'},
    ],
    name: 'multisendToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'newOwner', type: 'address'}],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'to', type: 'address'}],
    name: 'withdrawWronglySentEther',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
    ],
    name: 'withdrawWronglySentToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {stateMutability: 'payable', type: 'receive'},
];

const lock_bsctestnet = '0xF119648caDfAb92Dce6F6654eE0422596282b6B7';
const lock_bsc = '0x407993575c91ce7643a4d4cCACc9A98c36eE1BBE';

const lockAbi = [
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'uint256', name: 'id', type: 'uint256'},
      {indexed: false, internalType: 'address', name: 'token', type: 'address'},
      {indexed: false, internalType: 'address', name: 'owner', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unlockDate',
        type: 'uint256',
      },
    ],
    name: 'LockAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lockId',
        type: 'uint256',
      },
    ],
    name: 'LockDescriptionChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lockId',
        type: 'uint256',
      },
      {indexed: false, internalType: 'address', name: 'owner', type: 'address'},
      {
        indexed: false,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'LockOwnerChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'uint256', name: 'id', type: 'uint256'},
      {indexed: false, internalType: 'address', name: 'token', type: 'address'},
      {indexed: false, internalType: 'address', name: 'owner', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unlockedAt',
        type: 'uint256',
      },
    ],
    name: 'LockRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'uint256', name: 'id', type: 'uint256'},
      {indexed: false, internalType: 'address', name: 'token', type: 'address'},
      {indexed: false, internalType: 'address', name: 'owner', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newUnlockDate',
        type: 'uint256',
      },
    ],
    name: 'LockUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'uint256', name: 'id', type: 'uint256'},
      {indexed: false, internalType: 'address', name: 'token', type: 'address'},
      {indexed: false, internalType: 'address', name: 'owner', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'remaining',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'LockVested',
    type: 'event',
  },
  {
    inputs: [],
    name: 'allLpTokenLockedCount',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'allNormalTokenLockedCount',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '', type: 'address'}],
    name: 'cumulativeLockInfo',
    outputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'factory', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'lockId', type: 'uint256'},
      {internalType: 'uint256', name: 'newAmount', type: 'uint256'},
      {internalType: 'uint256', name: 'newUnlockDate', type: 'uint256'},
    ],
    name: 'editLock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'lockId', type: 'uint256'},
      {internalType: 'string', name: 'description', type: 'string'},
    ],
    name: 'editLockDescription',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'start', type: 'uint256'},
      {internalType: 'uint256', name: 'end', type: 'uint256'},
    ],
    name: 'getCumulativeLpTokenLockInfo',
    outputs: [
      {
        components: [
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'factory', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
        ],
        internalType: 'struct PinkLock02.CumulativeLockInfo[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'index', type: 'uint256'}],
    name: 'getCumulativeLpTokenLockInfoAt',
    outputs: [
      {
        components: [
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'factory', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
        ],
        internalType: 'struct PinkLock02.CumulativeLockInfo',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'start', type: 'uint256'},
      {internalType: 'uint256', name: 'end', type: 'uint256'},
    ],
    name: 'getCumulativeNormalTokenLockInfo',
    outputs: [
      {
        components: [
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'factory', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
        ],
        internalType: 'struct PinkLock02.CumulativeLockInfo[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'index', type: 'uint256'}],
    name: 'getCumulativeNormalTokenLockInfoAt',
    outputs: [
      {
        components: [
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'factory', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
        ],
        internalType: 'struct PinkLock02.CumulativeLockInfo',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'index', type: 'uint256'}],
    name: 'getLockAt',
    outputs: [
      {
        components: [
          {internalType: 'uint256', name: 'id', type: 'uint256'},
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'owner', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'lockDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
          {internalType: 'uint256', name: 'cycle', type: 'uint256'},
          {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
          {internalType: 'uint256', name: 'unlockedAmount', type: 'uint256'},
          {internalType: 'string', name: 'description', type: 'string'},
        ],
        internalType: 'struct PinkLock02.Lock',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'lockId', type: 'uint256'}],
    name: 'getLockById',
    outputs: [
      {
        components: [
          {internalType: 'uint256', name: 'id', type: 'uint256'},
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'owner', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'lockDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
          {internalType: 'uint256', name: 'cycle', type: 'uint256'},
          {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
          {internalType: 'uint256', name: 'unlockedAmount', type: 'uint256'},
          {internalType: 'string', name: 'description', type: 'string'},
        ],
        internalType: 'struct PinkLock02.Lock',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'uint256', name: 'start', type: 'uint256'},
      {internalType: 'uint256', name: 'end', type: 'uint256'},
    ],
    name: 'getLocksForToken',
    outputs: [
      {
        components: [
          {internalType: 'uint256', name: 'id', type: 'uint256'},
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'owner', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'lockDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
          {internalType: 'uint256', name: 'cycle', type: 'uint256'},
          {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
          {internalType: 'uint256', name: 'unlockedAmount', type: 'uint256'},
          {internalType: 'string', name: 'description', type: 'string'},
        ],
        internalType: 'struct PinkLock02.Lock[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalLockCount',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'owner', type: 'address'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'bool', name: 'isLpToken', type: 'bool'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'unlockDate', type: 'uint256'},
      {internalType: 'string', name: 'description', type: 'string'},
    ],
    name: 'lock',
    outputs: [{internalType: 'uint256', name: 'id', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'user', type: 'address'}],
    name: 'lpLockCountForUser',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'user', type: 'address'},
      {internalType: 'uint256', name: 'index', type: 'uint256'},
    ],
    name: 'lpLockForUserAtIndex',
    outputs: [
      {
        components: [
          {internalType: 'uint256', name: 'id', type: 'uint256'},
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'owner', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'lockDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
          {internalType: 'uint256', name: 'cycle', type: 'uint256'},
          {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
          {internalType: 'uint256', name: 'unlockedAmount', type: 'uint256'},
          {internalType: 'string', name: 'description', type: 'string'},
        ],
        internalType: 'struct PinkLock02.Lock',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'user', type: 'address'}],
    name: 'lpLocksForUser',
    outputs: [
      {
        components: [
          {internalType: 'uint256', name: 'id', type: 'uint256'},
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'owner', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'lockDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
          {internalType: 'uint256', name: 'cycle', type: 'uint256'},
          {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
          {internalType: 'uint256', name: 'unlockedAmount', type: 'uint256'},
          {internalType: 'string', name: 'description', type: 'string'},
        ],
        internalType: 'struct PinkLock02.Lock[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address[]', name: 'owners', type: 'address[]'},
      {internalType: 'uint256[]', name: 'amounts', type: 'uint256[]'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'bool', name: 'isLpToken', type: 'bool'},
      {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
      {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
      {internalType: 'uint256', name: 'cycle', type: 'uint256'},
      {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
      {internalType: 'string', name: 'description', type: 'string'},
    ],
    name: 'multipleVestingLock',
    outputs: [{internalType: 'uint256[]', name: '', type: 'uint256[]'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'user', type: 'address'}],
    name: 'normalLockCountForUser',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'user', type: 'address'},
      {internalType: 'uint256', name: 'index', type: 'uint256'},
    ],
    name: 'normalLockForUserAtIndex',
    outputs: [
      {
        components: [
          {internalType: 'uint256', name: 'id', type: 'uint256'},
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'owner', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'lockDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
          {internalType: 'uint256', name: 'cycle', type: 'uint256'},
          {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
          {internalType: 'uint256', name: 'unlockedAmount', type: 'uint256'},
          {internalType: 'string', name: 'description', type: 'string'},
        ],
        internalType: 'struct PinkLock02.Lock',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'user', type: 'address'}],
    name: 'normalLocksForUser',
    outputs: [
      {
        components: [
          {internalType: 'uint256', name: 'id', type: 'uint256'},
          {internalType: 'address', name: 'token', type: 'address'},
          {internalType: 'address', name: 'owner', type: 'address'},
          {internalType: 'uint256', name: 'amount', type: 'uint256'},
          {internalType: 'uint256', name: 'lockDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
          {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
          {internalType: 'uint256', name: 'cycle', type: 'uint256'},
          {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
          {internalType: 'uint256', name: 'unlockedAmount', type: 'uint256'},
          {internalType: 'string', name: 'description', type: 'string'},
        ],
        internalType: 'struct PinkLock02.Lock[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'lockId', type: 'uint256'}],
    name: 'renounceLockOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'token', type: 'address'}],
    name: 'totalLockCountForToken',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'user', type: 'address'}],
    name: 'totalLockCountForUser',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalTokenLockedCount',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'lockId', type: 'uint256'},
      {internalType: 'address', name: 'newOwner', type: 'address'},
    ],
    name: 'transferLockOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'lockId', type: 'uint256'}],
    name: 'unlock',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'owner', type: 'address'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'bool', name: 'isLpToken', type: 'bool'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'tgeDate', type: 'uint256'},
      {internalType: 'uint256', name: 'tgeBps', type: 'uint256'},
      {internalType: 'uint256', name: 'cycle', type: 'uint256'},
      {internalType: 'uint256', name: 'cycleBps', type: 'uint256'},
      {internalType: 'string', name: 'description', type: 'string'},
    ],
    name: 'vestingLock',
    outputs: [{internalType: 'uint256', name: 'id', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'lockId', type: 'uint256'}],
    name: 'withdrawableTokens',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
];

const xchain_router_abi = [
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'oldMPC', type: 'address'},
      {indexed: true, internalType: 'address', name: 'newMPC', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'chainID',
        type: 'uint256',
      },
    ],
    name: 'LogChangeMPC',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'bytes32', name: 'txhash', type: 'bytes32'},
      {indexed: true, internalType: 'address', name: 'token', type: 'address'},
      {indexed: true, internalType: 'address', name: 'to', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fromChainID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'toChainID',
        type: 'uint256',
      },
      {indexed: false, internalType: 'uint256', name: 'fee', type: 'uint256'},
    ],
    name: 'LogSwapIn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'token', type: 'address'},
      {indexed: true, internalType: 'address', name: 'from', type: 'address'},
      {indexed: true, internalType: 'address', name: 'to', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fromChainID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'toChainID',
        type: 'uint256',
      },
    ],
    name: 'LogSwapOut',
    type: 'event',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: 'txs', type: 'bytes32'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'fromChainID', type: 'uint256'},
      {internalType: 'uint256', name: 'fee', type: 'uint256'},
    ],
    name: 'SwapIn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: 'txs', type: 'bytes32'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'fromChainID', type: 'uint256'},
      {internalType: 'uint256', name: 'fee', type: 'uint256'},
    ],
    name: 'SwapInAuto',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'bytes32', name: 'txs', type: 'bytes32'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'fromChainID', type: 'uint256'},
      {internalType: 'uint256', name: 'fee', type: 'uint256'},
    ],
    name: 'SwapInUnderlying',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'toChainID', type: 'uint256'},
    ],
    name: 'SwapOut',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'toChainID', type: 'uint256'},
    ],
    name: 'SwapOutUnderlying',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'from', type: 'address'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
      {internalType: 'uint256', name: 'toChainID', type: 'uint256'},
    ],
    name: 'SwapOutUnderlyingWithPermit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'from', type: 'address'},
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
      {internalType: 'uint256', name: 'toChainID', type: 'uint256'},
    ],
    name: 'SwapOutUnderlyingWithTransferPermit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cID',
    outputs: [{internalType: 'uint256', name: 'id', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'newMPC', type: 'address'}],
    name: 'changeMPC',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'token', type: 'address'},
      {internalType: 'address', name: 'newVault', type: 'address'},
    ],
    name: 'changeVault',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '__mpc', type: 'address'}],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bytes32', name: 'txs', type: 'bytes32'}],
    name: 'isTransactionExist',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mpc',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
];

const testnet_token = {
  '0xDD9a71c92bBf35A2546321A82C88C02a00E27B44': {
    chainId: '0x60',
    symbol: 'INRx',
    name: 'INRx Token',
    token_address: '0xDD9a71c92bBf35A2546321A82C88C02a00E27B44',
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/25903.png',
    decimals: 2,
    isQuote: true,
  },
  '0x0dE8FCAE8421fc79B29adE9ffF97854a424Cad09': {
    chainId: '0x60',
    symbol: 'BNB',
    name: 'BNB Token',
    token_address: '0x0dE8FCAE8421fc79B29adE9ffF97854a424Cad09',
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1839.png',
    decimals: 18,
    isQuote: true,
    native: true,
  },
  '0x94112993c03c097f38aF850852502045F4DDCB7c': {
    chainId: '0x60',
    symbol: 'BUSD',
    name: 'Binance USD',
    token_address: '0x94112993c03c097f38aF850852502045F4DDCB7c',
    logo: 'https://cryptologos.cc/logos/binance-usd-busd-logo.png?v=024',
    decimals: 18,
    isQuote: true,
  },
  '0x8C9d4546Bc8c583bDD5F4c35F65709695085947F': {
    chainId: '0x60',
    symbol: 'BTC',
    name: 'BTC Token',
    token_address: '0x8C9d4546Bc8c583bDD5F4c35F65709695085947F',
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1.png',
    decimals: 18,
    // isQuote: true,
  },
  '0x3219d6adc1923De0A18F8255d103E33c4bC2EBD9': {
    chainId: '0x60',
    symbol: 'ETH',
    name: 'Ethereum Token',
    token_address: '0x3219d6adc1923De0A18F8255d103E33c4bC2EBD9',
    decimals: 18,
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png',
    // isQuote:true
  },
  '0x4dbB8e18D2DfdC184257Fcef4a030d5918261D0a': {
    chainId: '0x60',
    symbol: 'USD',
    name: 'BSC-USD',
    token_address: '0x4dbB8e18D2DfdC184257Fcef4a030d5918261D0a',
    decimals: 18,
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/20317.png',
  },
  '0x2F77dD67b04E2FB7Ac5EaA2BAC7666Bd91aA8e92': {
    chainId: '0x60',
    symbol: 'XRP',
    name: 'XRP Token',
    token_address: '0x2F77dD67b04E2FB7Ac5EaA2BAC7666Bd91aA8e92',
    decimals: 18,
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/52.png',
  },
  '0xe17AD9b47f49Fda350d2E11E8dC537f195355966': {
    chainId: '0x60',
    symbol: 'ADA',
    name: 'Cardano Token',
    token_address: '0xe17AD9b47f49Fda350d2E11E8dC537f195355966',
    decimals: 18,
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/2010.png',
  },
  '0xc82812f7332F0E7d05b457d1931A00582DdDa676': {
    chainId: '0x60',
    symbol: 'DOT',
    name: 'Polkadot Token',
    token_address: '0xc82812f7332F0E7d05b457d1931A00582DdDa676',
    decimals: 18,
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png',
  },
  '0x603720e60fCAfDbdb91BEEC6936b40b27e5370Af': {
    chainId: '0x60',
    symbol: 'SHIB',
    name: 'SHIBA INU Token',
    token_address: '0x603720e60fCAfDbdb91BEEC6936b40b27e5370Af',
    decimals: 18,
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/5994.png',
  },
  '0x8b7453CFBEE659F819d2e3ceCB4F7099D21293CB': {
    chainId: '0x60',
    symbol: 'DOGE',
    name: 'DOGE Token',
    token_address: '0x8b7453CFBEE659F819d2e3ceCB4F7099D21293CB',
    decimals: 18,
    logo: 'https://s2.coinmarketcap.com/static/img/coins/64x64/74.png',
  },
};

const v2RouterTokens = {
  '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c': {
    name: 'WBNB Token',
    symbol: 'BNB',
    token_address: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',
    chainId: 56,
    decimals: 18,
    logo: 'https://tokens.seedx.app/images/0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c.png',
    slug:"bsc"
  },
  '0xcD6970d5211EfDF2516A4fc73163db7bA812B212': {
    name: 'INRx',
    symbol: 'INRx',
    token_address: '0xcD6970d5211EfDF2516A4fc73163db7bA812B212',
    chainId: 56,
    decimals: 2,
    logo: 'https://inrx.io/assets/256px_inrx.png',
    slug:"bsc"
  },
  '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56': {
    name: 'Binance Pegged BUSD',
    symbol: 'BUSD',
    token_address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',
    chainId: 56,
    decimals: 18,
    logo: 'https://tokens.seedx.app/images/0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56.png',
    slug:"bsc"
  },

  '0x0cBfDea4F45A486Cc7dB53CB6e37b312A137C605': {
    name: 'SEEDx Token',
    symbol: 'SEEDx',
    token_address: '0x0cBfDea4F45A486Cc7dB53CB6e37b312A137C605',
    chainId: 56,
    decimals: 18,
    logo: 'https://tokens.seedx.app/images/0x0cBfDea4F45A486Cc7dB53CB6e37b312A137C605.png',
    slug:"bsc"
  },
  '0x55d398326f99059fF775485246999027B3197955': {
    name: 'Binance Pegged USDT',
    symbol: 'USDT',
    token_address: '0x55d398326f99059fF775485246999027B3197955',
    chainId: 56,
    decimals: 18,
    logo: 'https://tokens.seedx.app/images/0x55d398326f99059fF775485246999027B3197955.png',
    slug:"bsc"
  },
  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d': {
    name: 'Binance Pegged USD Coin',
    symbol: 'USDC',
    token_address: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',
    chainId: 56,
    decimals: 18,
    logo: 'https://tokens.seedx.app/images/0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d.png',
    slug:"bsc"
  },
  '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c': {
    name: 'Binance Pegged Bitcoin',
    symbol: 'BTCB',
    token_address: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',
    chainId: 56,
    decimals: 18,
    logo: 'https://tokens.seedx.app/images/0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c.png',
    slug:"bsc"
  },
  '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2': {
    chainId: 1,
    decimals: 18,
    symbol: 'ETH',
    name: 'Wrapped Ether',
    token_address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
    logo:"https://assets.pancakeswap.finance/web/native/1.png",
    slug:"ethereum"
  },

  '0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF': {
    name: 'Alchemix',
    symbol: 'ALCX',
    token_address: '0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF',
    chainId: 1,
    decimals: 18,
    logo: 'https://tokens.pancakeswap.finance/images/eth/0xdBdb4d16EdA451D0503b854CF79D55697F90c8DF.png',
    slug:"ethereum"
  },
  '0xE95A203B1a91a908F9B9CE46459d101078c2c3cb': {
    name: 'Ankr Statked ETH',
    symbol: 'ankrETH',
    token_address: '0xE95A203B1a91a908F9B9CE46459d101078c2c3cb',
    chainId: 1,
    decimals: 18,
    logo: 'https://tokens.pancakeswap.finance/images/eth/0xE95A203B1a91a908F9B9CE46459d101078c2c3cb.png',
    slug:"ethereum"
  },
};

const crossSwapERC20_abi = [
  {
    inputs: [
      {internalType: 'string', name: '_name', type: 'string'},
      {internalType: 'string', name: '_symbol', type: 'string'},
      {internalType: 'uint8', name: '_decimals', type: 'uint8'},
      {internalType: 'address', name: '_underlying', type: 'address'},
      {internalType: 'address', name: '_vault', type: 'address'},
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'owner', type: 'address'},
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {indexed: false, internalType: 'uint256', name: 'value', type: 'uint256'},
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'auth', type: 'address'},
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'LogAddAuth',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'effectiveHeight',
        type: 'uint256',
      },
    ],
    name: 'LogChangeMPCOwner',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldVault',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newVault',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'effectiveTime',
        type: 'uint256',
      },
    ],
    name: 'LogChangeVault',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {indexed: true, internalType: 'address', name: 'from', type: 'address'},
      {indexed: true, internalType: 'address', name: 'to', type: 'address'},
      {indexed: false, internalType: 'uint256', name: 'value', type: 'uint256'},
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PERMIT_TYPEHASH',
    outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TRANSFER_TYPEHASH',
    outputs: [{internalType: 'bytes32', name: '', type: 'bytes32'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: '', type: 'address'},
      {internalType: 'address', name: '', type: 'address'},
    ],
    name: 'allowance',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'applyMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'applyVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'spender', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
    ],
    name: 'approve',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'spender', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'bytes', name: 'data', type: 'bytes'},
    ],
    name: 'approveAndCall',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '', type: 'address'}],
    name: 'balanceOf',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'from', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
    ],
    name: 'burn',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'newVault', type: 'address'}],
    name: 'changeMPCOwner',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: 'newVault', type: 'address'}],
    name: 'changeVault',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [{internalType: 'uint8', name: '', type: 'uint8'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'delay',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'delayDelay',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'delayMinter',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'delayVault',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
    ],
    name: 'deposit',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'amount', type: 'uint256'}],
    name: 'deposit',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deposit',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
    ],
    name: 'depositVault',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'target', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
      {internalType: 'address', name: 'to', type: 'address'},
    ],
    name: 'depositWithPermit',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'target', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
      {internalType: 'address', name: 'to', type: 'address'},
    ],
    name: 'depositWithTransferPermit',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllMinters',
    outputs: [{internalType: 'address[]', name: '', type: 'address[]'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_vault', type: 'address'}],
    name: 'initVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '', type: 'address'}],
    name: 'isMinter',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
    ],
    name: 'mint',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    name: 'minters',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mpc',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{internalType: 'string', name: '', type: 'string'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '', type: 'address'}],
    name: 'nonces',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingDelay',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingMinter',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingVault',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'target', type: 'address'},
      {internalType: 'address', name: 'spender', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_auth', type: 'address'}],
    name: 'revokeMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_auth', type: 'address'}],
    name: 'setMinter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'address', name: '_vault', type: 'address'}],
    name: 'setVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'bool', name: 'enabled', type: 'bool'}],
    name: 'setVaultOnly',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{internalType: 'string', name: '', type: 'string'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
    ],
    name: 'transfer',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'bytes', name: 'data', type: 'bytes'},
    ],
    name: 'transferAndCall',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'from', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
    ],
    name: 'transferFrom',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'target', type: 'address'},
      {internalType: 'address', name: 'to', type: 'address'},
      {internalType: 'uint256', name: 'value', type: 'uint256'},
      {internalType: 'uint256', name: 'deadline', type: 'uint256'},
      {internalType: 'uint8', name: 'v', type: 'uint8'},
      {internalType: 'bytes32', name: 'r', type: 'bytes32'},
      {internalType: 'bytes32', name: 's', type: 'bytes32'},
    ],
    name: 'transferWithPermit',
    outputs: [{internalType: 'bool', name: '', type: 'bool'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'underlying',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vault',
    outputs: [{internalType: 'address', name: '', type: 'address'}],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
    ],
    name: 'withdraw',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{internalType: 'uint256', name: 'amount', type: 'uint256'}],
    name: 'withdraw',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {internalType: 'address', name: 'from', type: 'address'},
      {internalType: 'uint256', name: 'amount', type: 'uint256'},
      {internalType: 'address', name: 'to', type: 'address'},
    ],
    name: 'withdrawVault',
    outputs: [{internalType: 'uint256', name: '', type: 'uint256'}],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export {
  swapContractAddress,
  swapAbi,
  MULTICALL_ADDRESS,
  MULTICALL_ABI,
  testnet_token,
  v2RouterTokens,
  multisender_bsctestnet,
  multisenderabi,
  multisender_bsc,
  lockAbi,
  lock_bsctestnet,
  lock_bsc,
  xchain_router_abi,
  crossSwapERC20_abi,
};
